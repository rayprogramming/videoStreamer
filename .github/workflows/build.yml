name: Deploy
permissions:
      id-token: write
      contents: read    # This is required for actions/checkout@v2
      pull-requests: write
on:
  schedule:
    - cron: '30 20 * * 0'
  push:
    branches:
      - main  # Set a branch to deploy

jobs:
  infrastructure_build:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infrastructure
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.TERRAFORM_AWS_DEPLOY_ROLE }}
          role-session-name: gh
      - uses: hashicorp/setup-terraform@v1
      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        uses: actions/cache@v2
        env:
          cache-name: cache-terraform
        with:
          # npm cache files are stored in `~/.npm` on Linux/macOS
          path: ./.terraform
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/terraform.lock.hcl') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
      - name: Install Dependencies
        run: npm ci
        working-directory: frontend
      - name: Install Amplify CLI and Init
        run: |
          npm install -g @aws-amplify/cli --unsafe-perm=true
          amplify init --yes --amplify '{"envName":"dev"}'

      - name: Build
        run: npm run prod
        working-directory: frontend

      - name: Build
        run: npm run lint
        working-directory: frontend

      - name: Unit Test
        run: npm run test:unit:ci
        working-directory: frontend
      - name: e2e Test
        run: npm run test:e2e
        working-directory: frontend

      - name: Terraform fmt
        id: fmt
        run: terraform fmt -check
        continue-on-error: false

      - name: Terraform Init
        id: init
        run: terraform init
        continue-on-error: false

      - name: Terraform Validate
        id: validate
        run: terraform validate -no-color
        continue-on-error: false

      - name: Terraform Plan
        id: plan
        run: terraform plan -no-color
        continue-on-error: false

      - name: Terraform Apply
        id: apply
        run: terraform apply -auto-approve
        continue-on-error: false
      - name: sync
        id: sync
        working-directory: frontend/dist
        run: |
          aws s3 sync . s3://video.rayprogramming.com
